{"version":3,"sources":["components/CreateCategoryPopup/CreateCategoryPopup.module.css","components/CategoryContainer/CategoryContainer.module.css","components/HamburgerMenu/HamburgerMenu.module.css","components/CategoryItem/CategoryItem.module.css","components/CreateTaskForm/CreateTaskForm.module.css","components/Task/Task.module.css","components/CategoryNameForm/CategoryNameForm.module.css","components/Main/Main.module.css","components/Sidebar/Sidebar.module.css","components/ColorItem/ColorItem.module.css","components/CreateCategoryButton/CreateCategoryButton.module.css","components/ColorList/ColorList.module.css","components/App/App.module.css","components/ColorItem/ColorItem.js","components/ColorList/ColorList.js","components/CreateCategoryPopup/CreateCategoryPopup.js","components/CategoryItem/CategoryItem.js","components/CreateCategoryButton/CreateCategoryButton.js","components/HamburgerMenu/HamburgerMenu.js","components/Task/Task.js","components/CreateTaskForm/CreateTaskForm.js","components/CategoryNameForm/CategoryNameForm.js","components/CategoryContainer/CategoryContainer.js","components/Main/Main.js","components/Sidebar/Sidebar.js","components/App/App.js","index.js"],"names":["module","exports","ColorItem","color","chooseColor","id","type","className","styles","radio","name","value","onChange","required","htmlFor","ColorList","list","map","el","idx","CreateCategoryPopup","isCreateCategoryPopupOpen","closeCreateCategoryPopup","createCategory","useState","inputValue","setInputValue","setColor","popupIsOpen","popup","container","closeButton","onClick","form","onSubmit","e","preventDefault","uuid","categoryName","tasks","input","placeholder","target","validationError","addColorButton","CategoryItem","text","taskColor","removeCategory","item","itemContainer","task","deleteCategoryButton","CreateCategoryButton","openCreateCategoryPopup","button","HamburgerMenu","toDoList","isHamburgerMenuOpen","setIsHamburgerMenuOpen","closeMenuButton","prevState","categoryContainerActive","categoryContainer","Task","children","removeTask","checkbox","itemText","deleteTaskButton","CreateTaskForm","cancelCreateTask","onSaveCreateTask","categoryId","catId","isDone","buttonsContainer","saveButton","cancelButton","CategoryNameForm","onSaveEditCategoryName","onCancelEditCategoryName","inputValues","setInputValues","CategoryContainer","title","titleColor","createTask","changeCategoryName","isCreateTaskFormOpen","setIsCreateTaskFormOpen","isCategoryNameFormOpen","setIsCategoryNameFormOpen","titleContainer","categoryTitle","editButton","createTaskButton","data","Main","openCreateTaskForm","openCategoryNameForm","main","length","noTasksYet","Sidebar","console","log","sidebar","App","setIsCreateCategoryPopupOpen","setToDoList","setTasks","categoryData","closePopup","page","filter","inputValueData","prev","toDoItem","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b3adf7f2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"popup\":\"CreateCategoryPopup_popup__lXZXZ\",\"popupIsOpen\":\"CreateCategoryPopup_popupIsOpen__2WH2t\",\"container\":\"CreateCategoryPopup_container__2iI0H\",\"closeButton\":\"CreateCategoryPopup_closeButton__UyTJk\",\"form\":\"CreateCategoryPopup_form__g5sqM\",\"input\":\"CreateCategoryPopup_input__D9t4L\",\"validationError\":\"CreateCategoryPopup_validationError__1v3c0\",\"addColorButton\":\"CreateCategoryPopup_addColorButton__3scpG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"CategoryContainer_container__VbgZk\",\"titleContainer\":\"CategoryContainer_titleContainer__1OdAw\",\"categoryName\":\"CategoryContainer_categoryName__Qrz11\",\"form\":\"CategoryContainer_form__2ytKK\",\"categoryTitle\":\"CategoryContainer_categoryTitle__2TNwM\",\"green\":\"CategoryContainer_green__DGfRX\",\"blue\":\"CategoryContainer_blue__25Zuu\",\"pink\":\"CategoryContainer_pink__3V_b6\",\"lightgreen\":\"CategoryContainer_lightgreen__5etpn\",\"gray\":\"CategoryContainer_gray__1DmUM\",\"purple\":\"CategoryContainer_purple__1QfLU\",\"red\":\"CategoryContainer_red__2MERE\",\"black\":\"CategoryContainer_black__2E6zL\",\"editButton\":\"CategoryContainer_editButton__2gWLl\",\"list\":\"CategoryContainer_list__1G7rG\",\"createTaskButton\":\"CategoryContainer_createTaskButton__3Oh6F\",\"createTaskButtonHidden\":\"CategoryContainer_createTaskButtonHidden__a_IqJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"HamburgerMenu_container__mzqgQ\",\"button\":\"HamburgerMenu_button__2Gpu2\",\"closeMenuButton\":\"HamburgerMenu_closeMenuButton__1H3MX\",\"categoryContainer\":\"HamburgerMenu_categoryContainer__2kuhV\",\"categoryContainerActive\":\"HamburgerMenu_categoryContainerActive__3SkAh\",\"list\":\"HamburgerMenu_list__20bEe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CategoryItem_item__172ZS\",\"itemContainer\":\"CategoryItem_itemContainer__1Dn-P\",\"task\":\"CategoryItem_task__12Lct\",\"green\":\"CategoryItem_green__HW2md\",\"blue\":\"CategoryItem_blue__3cKGc\",\"pink\":\"CategoryItem_pink__3yzzS\",\"gray\":\"CategoryItem_gray__3229R\",\"purple\":\"CategoryItem_purple__2fDeX\",\"red\":\"CategoryItem_red__1Rt3r\",\"lightGreen\":\"CategoryItem_lightGreen__zGQbb\",\"black\":\"CategoryItem_black__2pSfb\",\"text\":\"CategoryItem_text__1C55B\",\"deleteCategoryButton\":\"CategoryItem_deleteCategoryButton__2rvLY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"CreateTaskForm_container__107qx\",\"input\":\"CreateTaskForm_input__2gHw_\",\"validationError\":\"CreateTaskForm_validationError__2uq7e\",\"buttonsContainer\":\"CreateTaskForm_buttonsContainer__3EGxI\",\"saveButton\":\"CreateTaskForm_saveButton__25PvI\",\"cancelButton\":\"CreateTaskForm_cancelButton__2oCmp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Task_item__rVRd-\",\"itemContainer\":\"Task_itemContainer__2dfCl\",\"checkbox\":\"Task_checkbox__2tAx6\",\"itemText\":\"Task_itemText__1qK2S\",\"deleteTaskButton\":\"Task_deleteTaskButton__3gBhs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"CategoryNameForm_form__1bWAA\",\"input\":\"CategoryNameForm_input__3jMvJ\",\"buttonsContainer\":\"CategoryNameForm_buttonsContainer__3Rdt9\",\"saveButton\":\"CategoryNameForm_saveButton__3HkFc\",\"cancelButton\":\"CategoryNameForm_cancelButton__26ZFv\",\"validationError\":\"CategoryNameForm_validationError__3yln1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Main_main__3Ndtu\",\"list\":\"Main_list__1ohNA\",\"listItem\":\"Main_listItem__1I2O4\",\"noTasksYet\":\"Main_noTasksYet__gFV0z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"Sidebar_sidebar__2kvTN\",\"title\":\"Sidebar_title__2kWCx\",\"list\":\"Sidebar_list__3Lk1p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radio\":\"ColorItem_radio__h4m2t\",\"green\":\"ColorItem_green__2mT9_\",\"blue\":\"ColorItem_blue__321zf\",\"pink\":\"ColorItem_pink__2aW6V\",\"gray\":\"ColorItem_gray__1WXoT\",\"purple\":\"ColorItem_purple__6I0M3\",\"red\":\"ColorItem_red__2gFZ7\",\"lightGreen\":\"ColorItem_lightGreen__2tQAv\",\"black\":\"ColorItem_black__2KEer\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"CreateCategoryButton_container__1FqIp\",\"button\":\"CreateCategoryButton_button__2Jbmp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ColorList_list__2bSJY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"App_page__1MKT1\"};","import styles from './ColorItem.module.css';\r\n\r\nfunction ColorItem({ color, chooseColor, id}) {\r\n\r\n  \r\n\r\n  return (\r\n    <li>\r\n      <input\r\n        type='radio'\r\n        className={`${styles.radio} ${styles[color]}`}\r\n        id={id}\r\n        name='colorList'\r\n        value={color}\r\n        onChange={chooseColor}\r\n        required\r\n      />\r\n      <label htmlFor={id} />\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default ColorItem;\r\n","import styles from './ColorList.module.css';\r\nimport ColorItem from '../ColorItem/ColorItem';\r\n\r\nfunction ColorList( {chooseColor, id }) {\r\n\r\n    const COLORS = ['green', 'blue', 'pink', 'gray', 'purple', 'red', 'lightGreen', 'black']\r\n\r\n    return (\r\n        <ul className={styles.list}>\r\n\r\n{\r\n    COLORS.map((el, idx) => (\r\n        <ColorItem\r\n        chooseColor={chooseColor}\r\n        color={el}\r\n        key={idx}\r\n        id={`${id + idx}`}\r\n        />\r\n    ))\r\n}\r\n\r\n\r\n            {/* <ColorItem chooseColor={chooseColor} color={'green'} id={1} />\r\n            <ColorItem chooseColor={chooseColor} color={'blue'} id={2} />\r\n            <ColorItem chooseColor={chooseColor} color={'pink'} id={3}/>\r\n            <ColorItem chooseColor={chooseColor} color={'gray'} id={4}/>\r\n            <ColorItem chooseColor={chooseColor} color={'purple'} id={5}/>\r\n            <ColorItem chooseColor={chooseColor} color={'red'} id={6}/>\r\n            <ColorItem chooseColor={chooseColor} color={'lightGreen'} id={7}/>\r\n            <ColorItem chooseColor={chooseColor} color={'black'} id={8} /> */}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default ColorList;","import { useState } from 'react';\r\nimport styles from './CreateCategoryPopup.module.css';\r\nimport ColorList from '../ColorList/ColorList';\r\nimport uuid from 'react-uuid';\r\n\r\nfunction CreateCategoryPopup({\r\n  isCreateCategoryPopupOpen,\r\n  closeCreateCategoryPopup,\r\n  createCategory,\r\n  id\r\n}) {\r\n  const [inputValue, setInputValue] = useState('');\r\n  const [color, setColor] = useState('');\r\n\r\n  function handleInput(e) {\r\n    setInputValue(e.target.value);\r\n  }\r\n\r\n  function chooseColor(e) {\r\n    setColor(e.target.value);\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    createCategory({\r\n      id: uuid(),\r\n      categoryName: inputValue,\r\n      color,\r\n      tasks: [],\r\n    });\r\n\r\n    closeCreateCategoryPopup();\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={`${isCreateCategoryPopupOpen && styles.popupIsOpen} ${\r\n        styles.popup\r\n      }`}\r\n    >\r\n      <div className={styles.container}>\r\n        <button\r\n          className={styles.closeButton}\r\n          type='button'\r\n          onClick={closeCreateCategoryPopup}\r\n          aria-label='Закрыть попап'\r\n        ></button>\r\n        <form className={styles.form} onSubmit={handleSubmit}>\r\n\r\n          <input\r\n            type='text'\r\n            className={styles.input}\r\n            placeholder='Название категории'\r\n            onChange={handleInput}\r\n            required\r\n          />\r\n          <span className={styles.validationError}>Текст ошибки валидации</span>\r\n          <ColorList chooseColor={chooseColor} id={id} />\r\n          <button className={styles.addColorButton} type='submit'>\r\n            Добавить\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreateCategoryPopup;\r\n","import styles from './CategoryItem.module.css';\r\n\r\nfunction CategoryItem({ text, taskColor, id, removeCategory }) {\r\n\r\n\r\n  function handleRemoveCategory() {\r\n    removeCategory(id)\r\n  }\r\n\r\n  return (\r\n    <li className={styles.item}>\r\n      <div className={styles.itemContainer}>\r\n        <span className={`${styles.task} ${styles[taskColor]}`}></span>\r\n        <p className={styles.text}>{text}</p>\r\n      </div>\r\n\r\n      <button className={styles.deleteCategoryButton} aria-label='Удалить категорию' onClick={handleRemoveCategory}></button>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default CategoryItem;\r\n","import styles from './CreateCategoryButton.module.css';\r\n\r\nfunction CreateCategoryButton({ openCreateCategoryPopup }) {\r\n  return (\r\n    <div className={styles.container}>\r\n      <button\r\n        className={styles.button}\r\n        type='button'\r\n        onClick={openCreateCategoryPopup}\r\n      >\r\n        Добавить папку\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreateCategoryButton;\r\n","import styles from './HamburgerMenu.module.css';\r\nimport CategoryItem from '../CategoryItem/CategoryItem';\r\nimport CreateCategoryButton from '../CreateCategoryButton/CreateCategoryButton';\r\nimport CreateCategoryPopup from '../CreateCategoryPopup/CreateCategoryPopup';\r\nimport { useState } from 'react';\r\n\r\nfunction HamburgerMenu({\r\n  // handleHamburgerMenu,\r\n  // isHamburgerMenuOpen,\r\n  createCategory,\r\n  openCreateCategoryPopup,\r\n  isCreateCategoryPopupOpen,\r\n  closeCreateCategoryPopup,\r\n  toDoList,\r\n}) {\r\n  const [isHamburgerMenuOpen, setIsHamburgerMenuOpen] = useState(false);\r\n\r\n  function handleHamburgerMenu() {\r\n    setIsHamburgerMenuOpen((prevState) => !prevState);\r\n  }\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <button\r\n        className={`${isHamburgerMenuOpen && styles.closeMenuButton} ${\r\n          styles.button\r\n        }`}\r\n        type='button'\r\n        onClick={handleHamburgerMenu}\r\n        aria-label='Открыть или закрыть меню'\r\n      />\r\n\r\n      <div\r\n        className={`${isHamburgerMenuOpen && styles.categoryContainerActive} ${\r\n          styles.categoryContainer\r\n        }`}\r\n      >\r\n        <ul className={styles.list}>\r\n          {toDoList.map(({ categoryName, id, color }) => (\r\n            <CategoryItem text={categoryName} key={id} taskColor={color} />\r\n          ))}\r\n        </ul>\r\n        <CreateCategoryButton openCreateCategoryPopup={openCreateCategoryPopup} />\r\n        <CreateCategoryPopup\r\n          isCreateCategoryPopupOpen={isCreateCategoryPopupOpen}\r\n          closeCreateCategoryPopup={closeCreateCategoryPopup}\r\n          createCategory={createCategory}\r\n          id={'mobile'}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HamburgerMenu;\r\n","import styles from './Task.module.css';\r\n\r\nfunction Task({ id, children, removeTask }) {\r\n\r\n  function handleRemoveTask() {\r\n    removeTask(id)\r\n  }\r\n  return (\r\n    <li className={styles.item}>\r\n      <div className={styles.itemContainer}>\r\n        <input className={styles.checkbox} type='checkbox' id={id} />\r\n        <label className={styles.itemText} htmlFor={id}>\r\n          {children}\r\n        </label>\r\n      </div>\r\n      <button className={styles.deleteTaskButton} type='button' onClick={handleRemoveTask} />\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default Task;\r\n","import { useState } from 'react';\r\nimport styles from './CreateTaskForm.module.css';\r\nimport uuid from 'react-uuid';\r\n\r\nfunction CreateTaskForm({ cancelCreateTask, onSaveCreateTask, categoryId }) {\r\n  const [inputValue, setInputValue] = useState('')\r\n\r\n  function handleInput(e) {\r\n    setInputValue(e.target.value)\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    onSaveCreateTask({\r\n      catId: categoryId,\r\n      task:inputValue,\r\n      isDone: false,\r\n      id: uuid(),\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <form onSubmit={handleSubmit}>\r\n        <input className={styles.input} placeholder='Текст задачи' onChange={handleInput} required />\r\n        <span className={styles.validationError}>Текст ошибки валидации</span>\r\n        <div className={styles.buttonsContainer}>\r\n          <button className={styles.saveButton} type='submit'>\r\n            Добавить задачу\r\n          </button>\r\n          <button\r\n            className={styles.cancelButton}\r\n            onClick={cancelCreateTask}\r\n            type='button'\r\n          >\r\n            Отмена\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreateTaskForm;\r\n","import { useState } from 'react';\r\nimport styles from './CategoryNameForm.module.css';\r\n\r\nfunction CategoryNameForm({ onSaveEditCategoryName, onCancelEditCategoryName }) {\r\n\r\n  const [inputValues, setInputValues] = useState('')\r\n\r\n  function handleInput(e) {\r\n    setInputValues(e.target.value)\r\n  }\r\n\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    onSaveEditCategoryName(inputValues);\r\n  }\r\n  return (\r\n    <form className={styles.form} onSubmit={handleSubmit}>\r\n      <input className={styles.input} onChange={handleInput} />\r\n      <div className={styles.buttonsContainer}>\r\n        <button className={styles.saveButton} type='submit'>\r\n          Сохранить\r\n        </button>\r\n        <button className={styles.cancelButton} type='button' onClick={onCancelEditCategoryName}>\r\n          Отмена\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default CategoryNameForm;\r\n","import styles from './CategoryContainer.module.css';\r\nimport CreateTaskForm from '../CreateTaskForm/CreateTaskForm';\r\nimport CategoryNameForm from '../CategoryNameForm/CategoryNameForm';\r\nimport { useState } from 'react';\r\nimport Task from '../Task/Task';\r\n\r\nfunction CategoryContainer({ title, titleColor, createTask, tasks, categoryId, removeTask, changeCategoryName }) {\r\n  const [isCreateTaskFormOpen, setIsCreateTaskFormOpen] = useState(false);\r\n  const [isCategoryNameFormOpen, setIsCategoryNameFormOpen] = useState(false);\r\n\r\n  function onSaveCreateTask(data) {\r\n    createTask(data);\r\n    setIsCreateTaskFormOpen(false);\r\n  }\r\n\r\n  function openCreateTaskForm() {\r\n    setIsCreateTaskFormOpen(true);\r\n  }\r\n\r\n  function cancelCreateTask() {\r\n    setIsCreateTaskFormOpen(false);\r\n  }\r\n\r\n  function openCategoryNameForm() {\r\n    setIsCategoryNameFormOpen(true);\r\n  }\r\n\r\n  function onSaveEditCategoryName(inputValue) {\r\n    changeCategoryName({inputValue, categoryId})\r\n    setIsCategoryNameFormOpen(false);\r\n  }\r\n\r\n  function onCancelEditCategoryName() {\r\n    setIsCategoryNameFormOpen(false);\r\n  }\r\n\r\n\r\n  // function changeCategoryTitle() {\r\n  //   console.log('Клик на кнопке Изменить название')\r\n  // }\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <div className={styles.titleContainer}>\r\n        {!isCategoryNameFormOpen && (\r\n          <div className={styles.categoryName}>\r\n            <h2 className={`${styles.categoryTitle} ${styles[titleColor]}`}>{title}</h2>\r\n\r\n            <button\r\n              className={styles.editButton}\r\n              type='button'\r\n              onClick={openCategoryNameForm}\r\n              aria-label='Изменить название категории'\r\n            />\r\n          </div>\r\n        )}\r\n\r\n        {isCategoryNameFormOpen && (\r\n          <CategoryNameForm\r\n            onSaveEditCategoryName={onSaveEditCategoryName}\r\n            onCancelEditCategoryName={onCancelEditCategoryName}\r\n          />\r\n        )}\r\n      </div>\r\n\r\n      <ul className={styles.list}>\r\n        {tasks.map(({ task, id, isDone, catId }) => {\r\n          if (catId === categoryId) {\r\n            return (\r\n              <Task key={id} id={id} removeTask={removeTask}>\r\n                {task}\r\n              </Task>\r\n            );\r\n          }\r\n\r\n          return '';\r\n        })}\r\n      </ul>\r\n\r\n      {!isCreateTaskFormOpen && (\r\n        <button type='button' className={styles.createTaskButton} onClick={openCreateTaskForm}>\r\n          Новая задача\r\n        </button>\r\n      )}\r\n      {isCreateTaskFormOpen && (\r\n        <CreateTaskForm\r\n          cancelCreateTask={cancelCreateTask}\r\n          createTask={createTask}\r\n          onSaveCreateTask={onSaveCreateTask}\r\n          categoryId={categoryId}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CategoryContainer;\r\n","import Task from '../Task/Task';\r\nimport CategoryContainer from '../CategoryContainer/CategoryContainer';\r\nimport styles from './Main.module.css';\r\n\r\nfunction Main({\r\n  isCreateTaskFormOpen,\r\n  openCreateTaskForm,\r\n  cancelCreateTask,\r\n  createTask,\r\n  removeTask,\r\n  isCategoryNameFormOpen,\r\n  openCategoryNameForm,\r\n  onSaveEditCategoryName,\r\n  onCancelEditCategoryName,\r\n  toDoList,\r\n  tasks,\r\n  changeCategoryName\r\n}) {\r\n\r\n\r\n\r\n\r\n  return (\r\n    <main className={styles.main}>\r\n      {toDoList.length === 0 ? (\r\n        <span className={styles.noTasksYet}>Задачи отсутствуют</span>\r\n      ) : (\r\n        <ul className={styles.list}>\r\n          {toDoList.map(({ categoryName, color, id }) => (\r\n            <CategoryContainer\r\n              title={categoryName}\r\n              titleColor={color}\r\n              key={id}\r\n              openCreateTaskForm={openCreateTaskForm}\r\n              isCreateTaskFormOpen={isCreateTaskFormOpen}\r\n              createTask={createTask}\r\n              removeTask={removeTask}\r\n              cancelCreateTask={cancelCreateTask}\r\n              openCategoryNameForm={openCategoryNameForm}\r\n              isCategoryNameFormOpen={isCategoryNameFormOpen}\r\n              onSaveEditCategoryName={onSaveEditCategoryName}\r\n              onCancelEditCategoryName={onCancelEditCategoryName}\r\n              tasks={tasks}\r\n              categoryId={id}\r\n              changeCategoryName={changeCategoryName}\r\n            />\r\n          ))}\r\n        </ul>\r\n      )}\r\n\r\n      <ul className={styles.list}>\r\n        {/* <li className={styles.listItem}>\r\n          <CategoryContainer\r\n            title={'Покупки'}\r\n            titleColor={'green'}\r\n            openCreateTaskForm={openCreateTaskForm}\r\n            isCreateTaskFormOpen={isCreateTaskFormOpen}\r\n            createTask={createTask}\r\n            cancelCreateTask={cancelCreateTask}\r\n            openCategoryNameForm={openCategoryNameForm}\r\n            isCategoryNameFormOpen={isCategoryNameFormOpen}\r\n            onSaveEditCategoryName={onSaveEditCategoryName}\r\n            onCancelEditCategoryName={onCancelEditCategoryName}\r\n          >\r\n            <Task id={1}>Макарошки</Task>\r\n            <Task id={2}>Картошку</Task>\r\n            <Task id={3}>Биткоины</Task>\r\n          </CategoryContainer>\r\n        </li>\r\n        <li className={styles.listItem}>\r\n          <CategoryContainer\r\n            title={'Фронтенд'}\r\n            titleColor={'blue'}\r\n            openCreateTaskForm={openCreateTaskForm}\r\n            isCreateTaskFormOpen={isCreateTaskFormOpen}\r\n            cancelCreateTask={cancelCreateTask}\r\n            createTask={createTask}\r\n            openCategoryNameForm={openCategoryNameForm}\r\n            isCategoryNameFormOpen={isCategoryNameFormOpen}\r\n            onSaveEditCategoryName={onSaveEditCategoryName}\r\n            onCancelEditCategoryName={onCancelEditCategoryName}\r\n          >\r\n            <Task id={4}>Изучить JavaScript</Task>\r\n            <Task id={5}>Изучить паттерны проектирования</Task>\r\n            <Task id={6}>ReactJS Hooks (useState, useReducer, useEffect и т.д.)</Task>\r\n            <Task id={7}>Redux (redux-observable, redux-saga)</Task>\r\n          </CategoryContainer>\r\n        </li>\r\n        <li className={styles.listItem}>\r\n          <CategoryContainer\r\n            title={'Фильмы'}\r\n            titleColor={'pink'}\r\n            openCreateTaskForm={openCreateTaskForm}\r\n            isCreateTaskFormOpen={isCreateTaskFormOpen}\r\n            cancelCreateTask={cancelCreateTask}\r\n            createTask={createTask}\r\n            openCategoryNameForm={openCategoryNameForm}\r\n            isCategoryNameFormOpen={isCategoryNameFormOpen}\r\n            onSaveEditCategoryName={onSaveEditCategoryName}\r\n            onCancelEditCategoryName={onCancelEditCategoryName}\r\n          >\r\n            <Task id={8}>Зеленая миля</Task>\r\n            <Task id={9}>Довод</Task>\r\n            <Task id={10}>Конг против Годзиллы</Task>\r\n            <Task id={11}>Рик и Морти</Task>\r\n          </CategoryContainer>\r\n        </li>\r\n        <li className={styles.listItem}>\r\n          <CategoryContainer\r\n            title={'Книги'}\r\n            titleColor={'lightgreen'}\r\n            openCreateTaskForm={openCreateTaskForm}\r\n            isCreateTaskFormOpen={isCreateTaskFormOpen}\r\n            cancelCreateTask={cancelCreateTask}\r\n            createTask={createTask}\r\n            openCategoryNameForm={openCategoryNameForm}\r\n            isCategoryNameFormOpen={isCategoryNameFormOpen}\r\n            onSaveEditCategoryName={onSaveEditCategoryName}\r\n            onCancelEditCategoryName={onCancelEditCategoryName}\r\n          >\r\n            <Task id={12}>Learn JavaScript</Task>\r\n            <Task id={13}>Выразительный JavaScript</Task>\r\n          </CategoryContainer>\r\n        </li>\r\n        <li className={styles.listItem}>\r\n          <CategoryContainer\r\n            title={'Личное'}\r\n            titleColor={'gray'}\r\n            openCreateTaskForm={openCreateTaskForm}\r\n            isCreateTaskFormOpen={isCreateTaskFormOpen}\r\n            cancelCreateTask={cancelCreateTask}\r\n            createTask={createTask}\r\n            openCategoryNameForm={openCategoryNameForm}\r\n            isCategoryNameFormOpen={isCategoryNameFormOpen}\r\n            onSaveEditCategoryName={onSaveEditCategoryName}\r\n            onCancelEditCategoryName={onCancelEditCategoryName}\r\n          >\r\n            <Task id={14}>Сделать To Do List</Task>\r\n          </CategoryContainer>\r\n        </li>\r\n\r\n        <li className={styles.listItem}>\r\n          <CategoryContainer\r\n            title={'Игры'}\r\n            titleColor={'purple'}\r\n            openCreateTaskForm={openCreateTaskForm}\r\n            isCreateTaskFormOpen={isCreateTaskFormOpen}\r\n            createTask={createTask}\r\n            cancelCreateTask={cancelCreateTask}\r\n            openCategoryNameForm={openCategoryNameForm}\r\n            isCategoryNameFormOpen={isCategoryNameFormOpen}\r\n            onSaveEditCategoryName={onSaveEditCategoryName}\r\n            onCancelEditCategoryName={onCancelEditCategoryName}\r\n          ></CategoryContainer>\r\n        </li> */}\r\n      </ul>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","import styles from './Sidebar.module.css';\r\nimport CreateCategoryPopup from '../CreateCategoryPopup/CreateCategoryPopup';\r\nimport CreateCategoryButton from '../CreateCategoryButton/CreateCategoryButton';\r\nimport CategoryItem from '../CategoryItem/CategoryItem';\r\n\r\nfunction Sidebar({\r\n  isCreateCategoryPopupOpen,\r\n  openCreateCategoryPopup,\r\n  closeCreateCategoryPopup,\r\n  createCategory,\r\n  removeCategory,\r\n  toDoList,\r\n}) {\r\n\r\n  console.log(toDoList)\r\n  return (\r\n    <div className={styles.sidebar}>\r\n      {toDoList.length !== 0 && (\r\n        <>\r\n          <h2 className={styles.title}>Все задачи</h2>\r\n\r\n          <ul className={styles.list}>\r\n            {toDoList.map(({ categoryName, color, id }) => (\r\n              <CategoryItem text={categoryName} taskColor={color} key={id} id={id} removeCategory={removeCategory} />\r\n            ))}\r\n          </ul>\r\n        </>\r\n      )}\r\n\r\n      <CreateCategoryButton openCreateCategoryPopup={openCreateCategoryPopup} />\r\n      <CreateCategoryPopup\r\n          isCreateCategoryPopupOpen={isCreateCategoryPopupOpen}\r\n          closeCreateCategoryPopup={closeCreateCategoryPopup}\r\n          createCategory={createCategory}\r\n          id={'sidebar'}\r\n        />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Sidebar;\r\n","import { useState } from 'react';\r\nimport '../../vendor/normalize.css';\r\nimport CreateCategoryPopup from '../CreateCategoryPopup/CreateCategoryPopup';\r\nimport HamburgerMenu from '../HamburgerMenu/HamburgerMenu';\r\nimport Main from '../Main/Main';\r\nimport Sidebar from '../Sidebar/Sidebar';\r\nimport styles from './App.module.css';\r\n\r\nfunction App() {\r\n  const [isCreateCategoryPopupOpen, setIsCreateCategoryPopupOpen] = useState(false);\r\n  const [toDoList, setToDoList] = useState([]);\r\n  const [tasks, setTasks] = useState([]);\r\n\r\n  // console.log('popup:', isCreateCategoryPopupOpen);\r\n  console.log('toDoList:', toDoList);\r\n  // console.log('tasks:', tasks);\r\n\r\n  function createTask(inputValue) {\r\n    setTasks((prevState) => [...prevState, inputValue]);\r\n  }\r\n\r\n  function removeTask(id) {\r\n    setTasks(prevState => prevState.filter(el => el.id !== id))\r\n  }\r\n\r\n  function createCategory(categoryData) {\r\n    setToDoList((prevState) => [...prevState, categoryData]);\r\n  }\r\n\r\n  function removeCategory(id) {\r\n    setToDoList(prevState => prevState.filter(el => el.id !== id))\r\n  }\r\n\r\n  function changeCategoryName(inputValueData) {\r\n    const {categoryId, inputValue } = inputValueData;\r\n\r\n    setToDoList(prev => \r\n      prev.map(toDoItem =>\r\n       toDoItem.id === categoryId ? ({\r\n          ...toDoItem,\r\n          categoryName: inputValue\r\n       }) : toDoItem)\r\n    )\r\n    \r\n  }\r\n\r\n  function openCreateCategoryPopup() {\r\n    setIsCreateCategoryPopupOpen(true);\r\n  }\r\n\r\n  function closePopup() {\r\n    setIsCreateCategoryPopupOpen(false);\r\n  }\r\n\r\n  return (\r\n    <div className={styles.page}>\r\n      <HamburgerMenu\r\n        openCreateCategoryPopup={openCreateCategoryPopup}\r\n        closeCreateCategoryPopup={closePopup}\r\n        isCreateCategoryPopupOpen={isCreateCategoryPopupOpen}\r\n        createCategory={createCategory}\r\n        toDoList={toDoList}\r\n      />\r\n      <Sidebar\r\n        openCreateCategoryPopup={openCreateCategoryPopup}\r\n        closeCreateCategoryPopup={closePopup}\r\n        isCreateCategoryPopupOpen={isCreateCategoryPopupOpen}\r\n        createCategory={createCategory}\r\n        removeCategory={removeCategory}\r\n        toDoList={toDoList}\r\n      />\r\n      <Main\r\n      toDoList={toDoList}\r\n      createTask={createTask}\r\n      removeTask={removeTask}\r\n      tasks={tasks}\r\n      changeCategoryName={changeCategoryName}\r\n      />\r\n\r\n      {/* <CreateCategoryPopup\r\n        isCreateCategoryPopupOpen={isCreateCategoryPopupOpen}\r\n        closeCreateCategoryPopup={closePopup}\r\n        createCategory={createCategory}\r\n      /> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App/App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n\r\n"],"sourceRoot":""}